# Generated by Django 4.1.7 on 2023-03-10 12:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Vendors",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vendorid", models.CharField(db_column="VENDORID", max_length=50)),
                ("remit", models.FloatField(blank=True, db_column="REMIT", null=True)),
                (
                    "filetype",
                    models.FloatField(blank=True, db_column="FILETYPE", null=True),
                ),
                (
                    "audtdate",
                    models.IntegerField(blank=True, db_column="AUDTDATE", null=True),
                ),
                (
                    "audttime",
                    models.IntegerField(blank=True, db_column="AUDTTIME", null=True),
                ),
                (
                    "audtuser",
                    models.CharField(
                        blank=True, db_column="AUDTUSER", max_length=50, null=True
                    ),
                ),
                (
                    "audtorg",
                    models.CharField(
                        blank=True, db_column="AUDTORG", max_length=50, null=True
                    ),
                ),
                (
                    "bankname",
                    models.CharField(
                        blank=True, db_column="BANKNAME", max_length=50, null=True
                    ),
                ),
                (
                    "bsbno",
                    models.IntegerField(blank=True, db_column="BSBNO", null=True),
                ),
                (
                    "accno",
                    models.IntegerField(blank=True, db_column="ACCNO", null=True),
                ),
                (
                    "accname",
                    models.CharField(
                        blank=True, db_column="ACCNAME", max_length=50, null=True
                    ),
                ),
                (
                    "payref",
                    models.FloatField(blank=True, db_column="PAYREF", null=True),
                ),
                (
                    "delmethod",
                    models.IntegerField(blank=True, db_column="DELMETHOD", null=True),
                ),
                (
                    "status",
                    models.IntegerField(blank=True, db_column="STATUS", null=True),
                ),
                (
                    "extra1",
                    models.FloatField(blank=True, db_column="EXTRA1", null=True),
                ),
                (
                    "extra2",
                    models.FloatField(blank=True, db_column="EXTRA2", null=True),
                ),
                (
                    "extra3",
                    models.FloatField(blank=True, db_column="EXTRA3", null=True),
                ),
                (
                    "extra4",
                    models.FloatField(blank=True, db_column="EXTRA4", null=True),
                ),
                (
                    "extra5",
                    models.FloatField(blank=True, db_column="EXTRA5", null=True),
                ),
                (
                    "extra6",
                    models.FloatField(blank=True, db_column="EXTRA6", null=True),
                ),
                (
                    "extra7",
                    models.FloatField(blank=True, db_column="EXTRA7", null=True),
                ),
                (
                    "extra8",
                    models.FloatField(blank=True, db_column="EXTRA8", null=True),
                ),
                (
                    "extra9",
                    models.FloatField(blank=True, db_column="EXTRA9", null=True),
                ),
                (
                    "extra10",
                    models.FloatField(blank=True, db_column="EXTRA10", null=True),
                ),
                (
                    "extra11",
                    models.FloatField(blank=True, db_column="EXTRA11", null=True),
                ),
                (
                    "extra12",
                    models.FloatField(blank=True, db_column="EXTRA12", null=True),
                ),
                (
                    "extra13",
                    models.FloatField(blank=True, db_column="EXTRA13", null=True),
                ),
                (
                    "extra14",
                    models.FloatField(blank=True, db_column="EXTRA14", null=True),
                ),
                (
                    "extra15",
                    models.FloatField(blank=True, db_column="EXTRA15", null=True),
                ),
                (
                    "extra16",
                    models.FloatField(blank=True, db_column="EXTRA16", null=True),
                ),
                (
                    "extra17",
                    models.FloatField(blank=True, db_column="EXTRA17", null=True),
                ),
                (
                    "extra18",
                    models.FloatField(blank=True, db_column="EXTRA18", null=True),
                ),
                (
                    "extra19",
                    models.FloatField(blank=True, db_column="EXTRA19", null=True),
                ),
                (
                    "extra20",
                    models.FloatField(blank=True, db_column="EXTRA20", null=True),
                ),
                (
                    "extra21",
                    models.FloatField(blank=True, db_column="EXTRA21", null=True),
                ),
                (
                    "extra22",
                    models.FloatField(blank=True, db_column="EXTRA22", null=True),
                ),
                (
                    "extra23",
                    models.FloatField(blank=True, db_column="EXTRA23", null=True),
                ),
                (
                    "extra24",
                    models.FloatField(blank=True, db_column="EXTRA24", null=True),
                ),
                (
                    "extra25",
                    models.FloatField(blank=True, db_column="EXTRA25", null=True),
                ),
                (
                    "extra26",
                    models.FloatField(blank=True, db_column="EXTRA26", null=True),
                ),
                (
                    "extra27",
                    models.FloatField(blank=True, db_column="EXTRA27", null=True),
                ),
                (
                    "extra28",
                    models.FloatField(blank=True, db_column="EXTRA28", null=True),
                ),
                (
                    "extra29",
                    models.FloatField(blank=True, db_column="EXTRA29", null=True),
                ),
                (
                    "extra30",
                    models.FloatField(blank=True, db_column="EXTRA30", null=True),
                ),
                (
                    "extra31",
                    models.FloatField(blank=True, db_column="EXTRA31", null=True),
                ),
                (
                    "extra32",
                    models.FloatField(blank=True, db_column="EXTRA32", null=True),
                ),
                (
                    "extra33",
                    models.FloatField(blank=True, db_column="EXTRA33", null=True),
                ),
                (
                    "extra34",
                    models.FloatField(blank=True, db_column="EXTRA34", null=True),
                ),
                (
                    "extra35",
                    models.FloatField(blank=True, db_column="EXTRA35", null=True),
                ),
                (
                    "extra36",
                    models.FloatField(blank=True, db_column="EXTRA36", null=True),
                ),
                (
                    "extra37",
                    models.FloatField(blank=True, db_column="EXTRA37", null=True),
                ),
                (
                    "extra38",
                    models.FloatField(blank=True, db_column="EXTRA38", null=True),
                ),
                (
                    "extra39",
                    models.FloatField(blank=True, db_column="EXTRA39", null=True),
                ),
                (
                    "extra40",
                    models.FloatField(blank=True, db_column="EXTRA40", null=True),
                ),
                (
                    "extra41",
                    models.FloatField(blank=True, db_column="EXTRA41", null=True),
                ),
                (
                    "extra42",
                    models.FloatField(blank=True, db_column="EXTRA42", null=True),
                ),
                (
                    "extra43",
                    models.FloatField(blank=True, db_column="EXTRA43", null=True),
                ),
                (
                    "extra44",
                    models.FloatField(blank=True, db_column="EXTRA44", null=True),
                ),
                (
                    "extra45",
                    models.FloatField(blank=True, db_column="EXTRA45", null=True),
                ),
                (
                    "extra46",
                    models.FloatField(blank=True, db_column="EXTRA46", null=True),
                ),
                (
                    "extra47",
                    models.FloatField(blank=True, db_column="EXTRA47", null=True),
                ),
                (
                    "extra48",
                    models.FloatField(blank=True, db_column="EXTRA48", null=True),
                ),
                (
                    "extra49",
                    models.FloatField(blank=True, db_column="EXTRA49", null=True),
                ),
                (
                    "extra50",
                    models.FloatField(blank=True, db_column="EXTRA50", null=True),
                ),
                (
                    "emailto",
                    models.EmailField(
                        blank=True, db_column="EMAILTO", max_length=254, null=True
                    ),
                ),
                (
                    "edelmethod",
                    models.IntegerField(blank=True, db_column="EDELMETHOD", null=True),
                ),
                (
                    "xbsbno",
                    models.CharField(
                        blank=True, db_column="XBSBNO", max_length=50, null=True
                    ),
                ),
                (
                    "xaccno",
                    models.CharField(
                        blank=True, db_column="XACCNO", max_length=50, null=True
                    ),
                ),
                (
                    "rmtpasswd",
                    models.IntegerField(blank=True, db_column="RMTPASSWD", null=True),
                ),
            ],
            options={
                "db_table": "vendors_vendor",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Transactions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("idbank", models.CharField(db_column="IDBANK", max_length=50)),
                (
                    "idrmit",
                    models.FloatField(blank=True, db_column="IDRMIT", null=True),
                ),
                (
                    "longserial",
                    models.IntegerField(blank=True, db_column="LONGSERIAL", null=True),
                ),
                (
                    "datermit",
                    models.DateField(blank=True, db_column="DATERMIT", null=True),
                ),
                (
                    "audtdate",
                    models.DateField(blank=True, db_column="AUDTDATE", null=True),
                ),
                (
                    "audttime",
                    models.DateTimeField(blank=True, db_column="AUDTTIME", null=True),
                ),
                (
                    "audtuser",
                    models.CharField(
                        blank=True, db_column="AUDTUSER", max_length=50, null=True
                    ),
                ),
                (
                    "audtorg",
                    models.CharField(
                        blank=True, db_column="AUDTORG", max_length=50, null=True
                    ),
                ),
                (
                    "datebatch",
                    models.DateField(blank=True, db_column="DATEBATCH", null=True),
                ),
                (
                    "amtrmittc",
                    models.FloatField(blank=True, db_column="AMTRMITTC", null=True),
                ),
                (
                    "amtpaym",
                    models.FloatField(blank=True, db_column="AMTPAYM", null=True),
                ),
                (
                    "amtdisc",
                    models.FloatField(blank=True, db_column="AMTDISC", null=True),
                ),
                (
                    "paymcode",
                    models.CharField(
                        blank=True, db_column="PAYMCODE", max_length=50, null=True
                    ),
                ),
                (
                    "codecurn",
                    models.CharField(
                        blank=True, db_column="CODECURN", max_length=50, null=True
                    ),
                ),
                (
                    "idratetype",
                    models.CharField(
                        blank=True, db_column="IDRATETYPE", max_length=50, null=True
                    ),
                ),
                (
                    "rateexchhc",
                    models.FloatField(blank=True, db_column="RATEEXCHHC", null=True),
                ),
                (
                    "swovrdrate",
                    models.IntegerField(blank=True, db_column="SWOVRDRATE", null=True),
                ),
                (
                    "textretrn",
                    models.CharField(
                        blank=True, db_column="TEXTRETRN", max_length=50, null=True
                    ),
                ),
                (
                    "amtrounder",
                    models.FloatField(blank=True, db_column="AMTROUNDER", null=True),
                ),
                (
                    "daterate",
                    models.IntegerField(blank=True, db_column="DATERATE", null=True),
                ),
                (
                    "cntfiscyr",
                    models.IntegerField(blank=True, db_column="CNTFISCYR", null=True),
                ),
                (
                    "cntfiscper",
                    models.IntegerField(blank=True, db_column="CNTFISCPER", null=True),
                ),
                (
                    "textpayor",
                    models.TextField(blank=True, db_column="TEXTPAYOR", null=True),
                ),
                (
                    "cntbtch",
                    models.IntegerField(blank=True, db_column="CNTBTCH", null=True),
                ),
                (
                    "cntitem",
                    models.IntegerField(blank=True, db_column="CNTITEM", null=True),
                ),
                (
                    "swchkclrd",
                    models.IntegerField(blank=True, db_column="SWCHKCLRD", null=True),
                ),
                (
                    "amtrmithc",
                    models.FloatField(blank=True, db_column="AMTRMITHC", null=True),
                ),
                (
                    "amtadj",
                    models.FloatField(blank=True, db_column="AMTADJ", null=True),
                ),
                (
                    "dateclrd",
                    models.IntegerField(blank=True, db_column="DATECLRD", null=True),
                ),
                (
                    "datervrsd",
                    models.IntegerField(blank=True, db_column="DATERVRSD", null=True),
                ),
                (
                    "trxtypetxt",
                    models.IntegerField(blank=True, db_column="TRXTYPETXT", null=True),
                ),
                ("idinvc", models.TextField(blank=True, db_column="IDINVC", null=True)),
                (
                    "rateop",
                    models.IntegerField(blank=True, db_column="RATEOP", null=True),
                ),
                (
                    "paymtype",
                    models.IntegerField(blank=True, db_column="PAYMTYPE", null=True),
                ),
                ("cuid", models.IntegerField(blank=True, db_column="CUID", null=True)),
                (
                    "drillapp",
                    models.TextField(blank=True, db_column="DRILLAPP", null=True),
                ),
                (
                    "drilltype",
                    models.IntegerField(blank=True, db_column="DRILLTYPE", null=True),
                ),
                (
                    "drilldwnlk",
                    models.IntegerField(blank=True, db_column="DRILLDWNLK", null=True),
                ),
                (
                    "idacct",
                    models.FloatField(blank=True, db_column="IDACCT", null=True),
                ),
                (
                    "swnonrcvbl",
                    models.IntegerField(blank=True, db_column="SWNONRCVBL", null=True),
                ),
                (
                    "swjob",
                    models.IntegerField(blank=True, db_column="SWJOB", null=True),
                ),
                (
                    "idinvcmtch",
                    models.FloatField(blank=True, db_column="IDINVCMTCH", null=True),
                ),
                (
                    "swtxamtctl",
                    models.IntegerField(blank=True, db_column="SWTXAMTCTL", null=True),
                ),
                (
                    "swtxbsectl",
                    models.IntegerField(blank=True, db_column="SWTXBSECTL", null=True),
                ),
                (
                    "codetaxgrp",
                    models.FloatField(blank=True, db_column="CODETAXGRP", null=True),
                ),
                (
                    "codetax1",
                    models.FloatField(blank=True, db_column="CODETAX1", null=True),
                ),
                (
                    "codetax2",
                    models.FloatField(blank=True, db_column="CODETAX2", null=True),
                ),
                (
                    "codetax3",
                    models.FloatField(blank=True, db_column="CODETAX3", null=True),
                ),
                (
                    "codetax4",
                    models.FloatField(blank=True, db_column="CODETAX4", null=True),
                ),
                (
                    "codetax5",
                    models.FloatField(blank=True, db_column="CODETAX5", null=True),
                ),
                (
                    "taxclass1",
                    models.IntegerField(blank=True, db_column="TAXCLASS1", null=True),
                ),
                (
                    "taxclass2",
                    models.IntegerField(blank=True, db_column="TAXCLASS2", null=True),
                ),
                (
                    "taxclass3",
                    models.IntegerField(blank=True, db_column="TAXCLASS3", null=True),
                ),
                (
                    "taxclass4",
                    models.IntegerField(blank=True, db_column="TAXCLASS4", null=True),
                ),
                (
                    "taxclass5",
                    models.IntegerField(blank=True, db_column="TAXCLASS5", null=True),
                ),
                (
                    "txbse1tc",
                    models.FloatField(blank=True, db_column="TXBSE1TC", null=True),
                ),
                (
                    "txbse2tc",
                    models.FloatField(blank=True, db_column="TXBSE2TC", null=True),
                ),
                (
                    "txbse3tc",
                    models.FloatField(blank=True, db_column="TXBSE3TC", null=True),
                ),
                (
                    "txbse4tc",
                    models.FloatField(blank=True, db_column="TXBSE4TC", null=True),
                ),
                (
                    "txbse5tc",
                    models.FloatField(blank=True, db_column="TXBSE5TC", null=True),
                ),
                (
                    "txamt1tc",
                    models.FloatField(blank=True, db_column="TXAMT1TC", null=True),
                ),
                (
                    "txamt2tc",
                    models.FloatField(blank=True, db_column="TXAMT2TC", null=True),
                ),
                (
                    "txamt3tc",
                    models.FloatField(blank=True, db_column="TXAMT3TC", null=True),
                ),
                (
                    "txamt4tc",
                    models.FloatField(blank=True, db_column="TXAMT4TC", null=True),
                ),
                (
                    "txamt5tc",
                    models.FloatField(blank=True, db_column="TXAMT5TC", null=True),
                ),
                (
                    "txtottc",
                    models.FloatField(blank=True, db_column="TXTOTTC", null=True),
                ),
                (
                    "amtnettc",
                    models.FloatField(blank=True, db_column="AMTNETTC", null=True),
                ),
                (
                    "txalltc",
                    models.FloatField(blank=True, db_column="TXALLTC", null=True),
                ),
                (
                    "txexptc",
                    models.FloatField(blank=True, db_column="TXEXPTC", null=True),
                ),
                (
                    "txrectc",
                    models.FloatField(blank=True, db_column="TXRECTC", null=True),
                ),
                (
                    "codecurnrc",
                    models.FloatField(blank=True, db_column="CODECURNRC", null=True),
                ),
                (
                    "swtxctlrc",
                    models.IntegerField(blank=True, db_column="SWTXCTLRC", null=True),
                ),
                (
                    "raterc",
                    models.FloatField(blank=True, db_column="RATERC", null=True),
                ),
                (
                    "ratetyperc",
                    models.FloatField(blank=True, db_column="RATETYPERC", null=True),
                ),
                (
                    "ratedaterc",
                    models.IntegerField(blank=True, db_column="RATEDATERC", null=True),
                ),
                (
                    "rateoprc",
                    models.IntegerField(blank=True, db_column="RATEOPRC", null=True),
                ),
                (
                    "txamt1rc",
                    models.FloatField(blank=True, db_column="TXAMT1RC", null=True),
                ),
                (
                    "txamt2rc",
                    models.FloatField(blank=True, db_column="TXAMT2RC", null=True),
                ),
                (
                    "txamt3rc",
                    models.FloatField(blank=True, db_column="TXAMT3RC", null=True),
                ),
                (
                    "txamt4rc",
                    models.FloatField(blank=True, db_column="TXAMT4RC", null=True),
                ),
                (
                    "txamt5rc",
                    models.FloatField(blank=True, db_column="TXAMT5RC", null=True),
                ),
                (
                    "txtotrc",
                    models.FloatField(blank=True, db_column="TXTOTRC", null=True),
                ),
                (
                    "txallrc",
                    models.FloatField(blank=True, db_column="TXALLRC", null=True),
                ),
                (
                    "txexprc",
                    models.FloatField(blank=True, db_column="TXEXPRC", null=True),
                ),
                (
                    "txrecrc",
                    models.FloatField(blank=True, db_column="TXRECRC", null=True),
                ),
                (
                    "txbse1hc",
                    models.FloatField(blank=True, db_column="TXBSE1HC", null=True),
                ),
                (
                    "txbse2hc",
                    models.FloatField(blank=True, db_column="TXBSE2HC", null=True),
                ),
                (
                    "txbse3hc",
                    models.FloatField(blank=True, db_column="TXBSE3HC", null=True),
                ),
                (
                    "txbse4hc",
                    models.FloatField(blank=True, db_column="TXBSE4HC", null=True),
                ),
                (
                    "txbse5hc",
                    models.FloatField(blank=True, db_column="TXBSE5HC", null=True),
                ),
                (
                    "txamt1hc",
                    models.FloatField(blank=True, db_column="TXAMT1HC", null=True),
                ),
                (
                    "txamt2hc",
                    models.FloatField(blank=True, db_column="TXAMT2HC", null=True),
                ),
                (
                    "txamt3hc",
                    models.FloatField(blank=True, db_column="TXAMT3HC", null=True),
                ),
                (
                    "txamt4hc",
                    models.FloatField(blank=True, db_column="TXAMT4HC", null=True),
                ),
                (
                    "txamt5hc",
                    models.FloatField(blank=True, db_column="TXAMT5HC", null=True),
                ),
                (
                    "txtothc",
                    models.FloatField(blank=True, db_column="TXTOTHC", null=True),
                ),
                (
                    "amtnethc",
                    models.FloatField(blank=True, db_column="AMTNETHC", null=True),
                ),
                (
                    "txallhc",
                    models.FloatField(blank=True, db_column="TXALLHC", null=True),
                ),
                (
                    "txexphc",
                    models.FloatField(blank=True, db_column="TXEXPHC", null=True),
                ),
                (
                    "txrechc",
                    models.FloatField(blank=True, db_column="TXRECHC", null=True),
                ),
                (
                    "cntacc",
                    models.IntegerField(blank=True, db_column="CNTACC", null=True),
                ),
                (
                    "amtacctc",
                    models.FloatField(blank=True, db_column="AMTACCTC", null=True),
                ),
                (
                    "amtacchc",
                    models.FloatField(blank=True, db_column="AMTACCHC", null=True),
                ),
                (
                    "datebus",
                    models.IntegerField(blank=True, db_column="DATEBUS", null=True),
                ),
                (
                    "amtwht1tc",
                    models.FloatField(blank=True, db_column="AMTWHT1TC", null=True),
                ),
                (
                    "amtwht2tc",
                    models.FloatField(blank=True, db_column="AMTWHT2TC", null=True),
                ),
                (
                    "amtwht3tc",
                    models.FloatField(blank=True, db_column="AMTWHT3TC", null=True),
                ),
                (
                    "amtwht4tc",
                    models.FloatField(blank=True, db_column="AMTWHT4TC", null=True),
                ),
                (
                    "amtwht5tc",
                    models.FloatField(blank=True, db_column="AMTWHT5TC", null=True),
                ),
                (
                    "amtcxbs1tc",
                    models.FloatField(blank=True, db_column="AMTCXBS1TC", null=True),
                ),
                (
                    "amtcxbs2tc",
                    models.FloatField(blank=True, db_column="AMTCXBS2TC", null=True),
                ),
                (
                    "amtcxbs3tc",
                    models.FloatField(blank=True, db_column="AMTCXBS3TC", null=True),
                ),
                (
                    "amtcxbs4tc",
                    models.FloatField(blank=True, db_column="AMTCXBS4TC", null=True),
                ),
                (
                    "amtcxbs5tc",
                    models.FloatField(blank=True, db_column="AMTCXBS5TC", null=True),
                ),
                (
                    "amtcxtx1tc",
                    models.FloatField(blank=True, db_column="AMTCXTX1TC", null=True),
                ),
                (
                    "amtcxtx2tc",
                    models.FloatField(blank=True, db_column="AMTCXTX2TC", null=True),
                ),
                (
                    "amtcxtx3tc",
                    models.FloatField(blank=True, db_column="AMTCXTX3TC", null=True),
                ),
                (
                    "amtcxtx4tc",
                    models.FloatField(blank=True, db_column="AMTCXTX4TC", null=True),
                ),
                (
                    "amtcxtx5tc",
                    models.FloatField(blank=True, db_column="AMTCXTX5TC", null=True),
                ),
                (
                    "idvend",
                    models.ForeignKey(
                        db_column="IDVEND",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transactions.vendors",
                    ),
                ),
            ],
            options={
                "db_table": "transactions_transaction",
                "managed": True,
            },
        ),
    ]
